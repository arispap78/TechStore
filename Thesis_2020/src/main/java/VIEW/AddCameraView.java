
package VIEW;

import CONTROLLER.AddProductCon;
import CONTROLLER.ShowProductCon;
import MODEL.Camera;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

public class AddCameraView extends javax.swing.JFrame {

    /**
     * Creates new form AddCameraView1
     */
    public AddCameraView() {
        initComponents();
        //display on the center of the screen
        this.setLocationRelativeTo(null);
        //list of the models of the camera
        List<String> items=new ArrayList<String>();
        //get the list of the models from the database
        items = camera.getListaCam("Camera");
        if(items.isEmpty())
            //message that the list is empty
            JOptionPane.showMessageDialog(null,"No list of models have found!Please try again! ");
        //the first element of the list
        items.add(0, "MODELS...");
        //copy the list to the combo box
        for(String a:items)
            jComboBoxModelCamera.addItem(a);
    }
    
    //instances of Controllers for the call of their methods
    AddProductCon updateItem=new AddProductCon();
    ShowProductCon camera=new ShowProductCon();
    //the choice of the ComboBox
    private String jboxmodelChoice=null;
    private String jboxmodel=null;
    private String marka=null;
    //the model and the brand of the product
    private String modelT=null;
    private String brandT=null;
    //initialization of the variable for the control of the ComboBox
    private boolean empty=false;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButtonAddItem = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jTextModel = new javax.swing.JTextField();
        jTextBrand = new javax.swing.JTextField();
        jTextScreen = new javax.swing.JTextField();
        jTextMegapixel = new javax.swing.JTextField();
        jTextImage = new javax.swing.JTextField();
        jTextMemorytype = new javax.swing.JTextField();
        jTextYear = new javax.swing.JTextField();
        jTextPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jComboBoxModelCamera = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ADD CAMERA ITEM");

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel1.setText("Image*:");

        jLabel2.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel2.setText("Megapixel*:");

        jLabel5.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel5.setText("Year*:");

        jLabel6.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel6.setText("Screen*:");
        jLabel6.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel10.setText("Memory Type*:");

        jLabel11.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel11.setText("Price*:");

        jLabel12.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel12.setText("Brand*:");
        jLabel12.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Gill Sans MT", 1, 48)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("CAMERA");

        jButtonAddItem.setBackground(new java.awt.Color(0, 153, 0));
        jButtonAddItem.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonAddItem.setText("ADD ");
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        jButtonReset.setBackground(new java.awt.Color(255, 255, 51));
        jButtonReset.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonReset.setText("RESET");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jTextModel.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextBrand.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextScreen.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jTextScreen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextScreenKeyTyped(evt);
            }
        });

        jTextMegapixel.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jTextMegapixel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextMegapixelKeyTyped(evt);
            }
        });

        jTextImage.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextMemorytype.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextYear.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jTextYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextYearKeyTyped(evt);
            }
        });

        jTextPrice.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jTextPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextPriceKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel4.setText("* required fields  for add item");

        jLabel14.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel14.setText("Quantity**:");

        jTextQuantity.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jTextQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextQuantityKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel7.setText("**required fields for add and delete item  ");

        jButtonDelete.setBackground(new java.awt.Color(255, 51, 51));
        jButtonDelete.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonDelete.setText("DELETE ");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jComboBoxModelCamera.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jComboBoxModelCamera.setToolTipText("");
        jComboBoxModelCamera.setAutoscrolls(true);
        jComboBoxModelCamera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModelCameraActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel9.setText("Brand & model**:");

        jLabel15.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        jLabel15.setText("Or write model*:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDelete)
                .addGap(39, 39, 39)
                .addComponent(jButtonAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxModelCamera, 0, 345, Short.MAX_VALUE)
                                .addComponent(jTextModel, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(149, 149, 149)
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(61, 61, 61)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel10)
                                .addComponent(jLabel5)
                                .addComponent(jLabel11))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextImage, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextMegapixel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextMemorytype, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBoxModelCamera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMegapixel))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextMemorytype, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonAddItem)
                    .addComponent(jButtonReset))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        //reset all the fields
        jTextModel.setText(null);
        jTextBrand.setText(null);
        jTextScreen.setText(null);
        jTextMegapixel.setText(null);
        jTextImage.setText(null);
        jTextMemorytype.setText(null);
        jTextYear.setText(null);
        jTextPrice.setText(null);
        jTextQuantity.setText(null);
        empty=false;
        modelT=null;
        marka=null;
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jTextPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPriceKeyTyped
        //check if the input of the user is a digit or (.) for the decimals
        char typeKey=evt.getKeyChar();
        if(!((Character.isDigit(typeKey)||(typeKey=='.')||(typeKey=='\b'))))
        {
            JOptionPane.showMessageDialog(this, "please insert a digit or decimal point(.)");
            evt.consume();
        }
    }//GEN-LAST:event_jTextPriceKeyTyped

    private void jTextYearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextYearKeyTyped
        //check if the input of the user is a digit
        char typeKey=evt.getKeyChar();
        if(!((Character.isDigit(typeKey)||(typeKey=='\b'))))
        {
            JOptionPane.showMessageDialog(this, "please insert a digit");
            evt.consume();
        }
    }//GEN-LAST:event_jTextYearKeyTyped

    private void jTextMegapixelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMegapixelKeyTyped
        //check if the input of the user is a digit or (.) for the decimals
        char typeKey=evt.getKeyChar();
        if(!((Character.isDigit(typeKey)||(typeKey=='.')||(typeKey=='\b'))))
        {
            JOptionPane.showMessageDialog(this, "please insert a digit or decimal point(.)");
            evt.consume();
        }
    }//GEN-LAST:event_jTextMegapixelKeyTyped

    private void jTextScreenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextScreenKeyTyped
        //check if the input of the user is a digit or (.) for the decimals
        char typeKey=evt.getKeyChar(); 
        if(!((Character.isDigit(typeKey)||(typeKey=='.')||(typeKey=='\b'))))
        {
            JOptionPane.showMessageDialog(this, "please insert a digit or decimal point(.)");
            evt.consume();
        }
    }//GEN-LAST:event_jTextScreenKeyTyped
    //add a model
    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        //if the model is already in the database(some fields are null)
        if(jTextModel.getText().isEmpty())
        {
            empty=true;
            //get the choice of the combo box
            jComboBoxModelCameraActionPerformed(evt);
            //the model and the brand
            modelT=jboxmodel;
            brandT=marka;
            //the quantity from the input
            String quantityT=jTextQuantity.getText();
            //if the field quantity is null
            if(jTextQuantity.getText().isEmpty())
                JOptionPane.showMessageDialog(null,"please fill the quantity");
            else
            {
                //find the model from the database
                Camera cam=(Camera) camera.getChoosenModelTel(modelT, "Camera");
                //inform the user the quantity of the model and ask if he/she wants to continue
                int reply = JOptionPane.showConfirmDialog(this,"The item(s) of this model are "+cam.getQuantity()
                        +"\n"+"Do you want to continue?","Confirmation",  JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) 
                {
                    //update the quantity of the model in the database 
                    if(updateItem.updateAddCameraCon(modelT,quantityT))
                    {
                        JOptionPane.showMessageDialog(null,"The item has been added in the database");
                    }
                    else 
                        JOptionPane.showMessageDialog(null,"The item has not been added in the database. Please try again!");
                }
                else 
                {
                    JOptionPane.showMessageDialog(this, "Please try again!");
                }             
            }
        } 
        //if it is a new entry in the database
        else
        {
            //save all the inputs of the user
            modelT=jTextModel.getText();
            brandT=jTextBrand.getText();
            String screenT=jTextScreen.getText();
            String megapixelT=jTextMegapixel.getText();
            String memorytypeT=jTextMemorytype.getText();        
            String imageT=jTextImage.getText();
            String yearT=jTextYear.getText();
            String priceT=jTextPrice.getText();
            String quantityT=jTextQuantity.getText();       
            //check if all the fields are filled
            boolean emptyError = updateItem.nullMessageCam(modelT, brandT, megapixelT, priceT, screenT, memorytypeT, imageT, yearT,quantityT);
            if(emptyError)
                JOptionPane.showMessageDialog(null,"please fill in all the required fields");
            else
            {
                //format the string for the serialnumber
                String serialnumberT=brandT.substring(0, 2)+modelT+yearT.substring(2);
                //update the database with the new model 
                if(updateItem.addCameraCon(modelT, brandT, megapixelT, priceT, screenT, memorytypeT, imageT, yearT,quantityT))
                {
                    JOptionPane.showMessageDialog(null,"The item has been added in the database");
                }
                else 
                    JOptionPane.showMessageDialog(null,"The item has not been added in the database. Please try again!");
            }
        }
        //reset the fields
        jButtonResetActionPerformed(evt);
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void jTextQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextQuantityKeyTyped
        //check if the input of the user is a digit
        char typeKey=evt.getKeyChar();
        if(!((Character.isDigit(typeKey)||(typeKey=='\b'))))
        {
            JOptionPane.showMessageDialog(this, "please insert a digit");
            evt.consume();
        }
    }//GEN-LAST:event_jTextQuantityKeyTyped
    //delete a model
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        empty=true;
        //get the choice of the combo box
        jComboBoxModelCameraActionPerformed(evt);
        //get the model and the quantity inputs
        modelT=jboxmodel;
        String quantityT=jTextQuantity.getText();
        //find the model from the database
        Camera cam=(Camera) camera.getChoosenModelTel(modelT, "Camera");
        //inform the user the quantity of the model and ask if he/she wants to continue
        int reply = JOptionPane.showConfirmDialog(this,"The item(s) of this model are "+cam.getQuantity()
                +"\n"+"Do you want to continue?","Confirmation",  JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) 
        {
            //update the quantity of the model in the database
            if(updateItem.updateCameraCon(modelT, quantityT))
            {
                JOptionPane.showMessageDialog(this, "the database has been updated");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "the model has not been found or there are not so many item(s) of it.Please try again!");
            }
        }
        else 
        {
            JOptionPane.showMessageDialog(this, "Please try again!");
        }
        //reset the fields
        jButtonResetActionPerformed(evt);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jComboBoxModelCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModelCameraActionPerformed
        if(empty)
        {
            //the choice of the user from the combo box
            jboxmodelChoice=jComboBoxModelCamera.getSelectedItem().toString();
            //if the user haven t choose a model
            if(jboxmodelChoice=="MODELS...")
            {
                //display a message to choose a model
                JOptionPane.showMessageDialog(null,"Please choose a model");
                jboxmodelChoice=null;
                //reset the fields
                jButtonResetActionPerformed(evt);
            }
            else
            {
                //separate the string,first is the brand second is the model
                String[] s=jboxmodelChoice.split(":");
                marka=s[0];
                jboxmodel=s[1];
            }
        } 
    }//GEN-LAST:event_jComboBoxModelCameraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCameraView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JComboBox<String> jComboBoxModelCamera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextBrand;
    private javax.swing.JTextField jTextImage;
    private javax.swing.JTextField jTextMegapixel;
    private javax.swing.JTextField jTextMemorytype;
    private javax.swing.JTextField jTextModel;
    private javax.swing.JTextField jTextPrice;
    private javax.swing.JTextField jTextQuantity;
    private javax.swing.JTextField jTextScreen;
    private javax.swing.JTextField jTextYear;
    // End of variables declaration//GEN-END:variables
}
