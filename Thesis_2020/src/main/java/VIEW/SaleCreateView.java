package VIEW;

import CONTROLLER.SaleCon;
import MODEL.Customer;
import MODEL.Product;
import MODEL.ProductString;
import MODEL.Sale;
import static VIEW.Login.ipallilos;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SaleCreateView extends javax.swing.JFrame {

    /**
     * Creates new form SaleCreateView
     */
    public SaleCreateView() {
        initComponents();
        //display on the center of the screen
        this.setLocationRelativeTo(null);
        //list of the customers
        List<String> items=new ArrayList<String>();
        items = salecon.getListaCustomerSale();
        //if there is no customer
        if(items.isEmpty())
            JOptionPane.showMessageDialog(null,"No list of models have found!Please try again! ");
        //the first element of the list
        items.add(0, "CUSTOMERS...");
        for(String a:items)
            jComboBoxCustomer.addItem(a);
    }
    
    //instance of ProductString for its methods
    ProductString productString;
    //instance of CONTROLLER for its methods
    SaleCon salecon=new SaleCon();
    //the choice of the category
    String jboxproduct=null;
    //the choice of the model
    String jboxmodel=null;
    //the choice from the list of the models
    String jboxmodelChoice;
    //the brand of the selected model
    String marka;
    //the customer of the sale
    Customer customerOrder;
    //the date that will display on the screen
    Date date1=new Date();
    //the format of the date
    SimpleDateFormat format=new SimpleDateFormat("dd/MM/yyyy");
    //the total items of the sale(display on the screen)
    int totalItems=0;
    //the total price of the items(display on the screen)
    double totalPrice=0;
    //the instances of ProductString(the name of the products) in the sale
    private ArrayList<ProductString> StringModelList=new ArrayList<>();
    //the selected product
    Product product;
    //the price of the selected product
    String price;
    //the list of the jTable
    DefaultTableModel lista;
    //list of the added products
    private ArrayList<String> addModelList=new ArrayList<>();
    //list of the removed products
    private ArrayList<String> deleteModelList=new ArrayList<>();
    //variables of the jboxCustomer
    private String jboxCustomerChoice=null;
    boolean empty=false;
    //email of the customer
    private String emailCustomer=null;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextSurnameCus = new javax.swing.JTextField();
        jTextAddress = new javax.swing.JTextField();
        jTextNameCus = new javax.swing.JTextField();
        jTextEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxProduct = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxModel = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSale = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButtonReset = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabelitems = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxCustomer = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CREATE SALE");

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Or insert the Customer");

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel3.setText("NAME:");

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel4.setText("ADDRESS:");

        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel5.setText("SURNAME:");

        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel6.setText("EMAIL:");

        jTextSurnameCus.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextAddress.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextNameCus.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jTextEmail.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("SALE");

        jLabel9.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel9.setText("CHOOSE A PRODUCT:");

        jComboBoxProduct.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jComboBoxProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CATEGORY...", "TELEVISION", "CAMERA", "MOBILE", "LAPTOP" }));
        jComboBoxProduct.setToolTipText("");
        jComboBoxProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProductActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel10.setText("CHOOSE THE MODEL:");
        jLabel10.setToolTipText("");

        jComboBoxModel.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jComboBoxModel.setToolTipText("");
        jComboBoxModel.setAutoscrolls(true);
        jComboBoxModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModelActionPerformed(evt);
            }
        });

        jTableSale.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jTableSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT", "BRAND", "MODEL", "PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableSale.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jTableSale);
        jTableSale.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel11.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel11.setText("TOTAL ITEMS:");

        jLabel12.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel12.setText("TOTAL PRICE:");

        jButtonAdd.setBackground(new java.awt.Color(0, 255, 0));
        jButtonAdd.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonAdd.setText("ADD");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jLabel13.setText("DATE:");

        jButtonReset.setBackground(new java.awt.Color(255, 255, 51));
        jButtonReset.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonReset.setText("RESET");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jLabel14.setText(format.format(date1));

        jLabelitems.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabelitems.setText(String.valueOf(totalItems));

        jLabelPrice.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabelPrice.setText(String.valueOf(totalPrice));

        jButtonSave.setBackground(new java.awt.Color(0, 0, 204));
        jButtonSave.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonSave.setText("SAVE");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(255, 51, 51));
        jButtonDelete.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jButtonDelete.setText("DELETE");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel15.setText("CHOOSE THE CUSTOMER:");
        jLabel15.setToolTipText("");

        jComboBoxCustomer.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jComboBoxCustomer.setToolTipText("");
        jComboBoxCustomer.setAutoscrolls(true);
        jComboBoxCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelitems, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextSurnameCus, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                                    .addComponent(jTextNameCus)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                                    .addComponent(jTextAddress)))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDelete)
                            .addGap(62, 62, 62)
                            .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextNameCus, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextSurnameCus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelitems, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(172, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(365, 365, 365))))
        );

        jScrollPane2.setViewportView(jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 0));
        jLabel1.setText("               Make A Sale");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //add a product oin the sale
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        if((jboxproduct!=null)&&(marka!=null)&&(jboxmodel!=null)&&(price!=null))
        {
            //the list of the products of the sale
            lista=(DefaultTableModel)jTableSale.getModel();
            //add a row on the jTable
            lista.addRow(new String[]{jboxproduct,marka,jboxmodel,price});
            //add one more item and its price in the total items and the total price of the sale
            totalItems=totalItems+1;
            totalPrice=totalPrice+product.getPrice();
            //update their values on the screen
            jLabelPrice.setText(String.valueOf(totalPrice));
            jLabelitems.setText(String.valueOf(totalItems));
            //add the name of the model in the list
            String addProion=jboxproduct+":"+marka+":"+jboxmodel;
            addModelList.add(addProion);
        }
        //if the user hasn t fill in all the fields
        else
            JOptionPane.showMessageDialog(null,"please fill in all the fields and select model!");            
    }//GEN-LAST:event_jButtonAddActionPerformed
    //save the sale in the database
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        //the customer of the sale
        String name=jTextNameCus.getText();
        String surname=jTextSurnameCus.getText();
        String email=jTextEmail.getText();
        String address=jTextAddress.getText();  
        //if the user has chosen from the jComboBoxCustomer
        if(name.isEmpty()&&surname.isEmpty()&&email.isEmpty()&&address.isEmpty())
        {            
            if((emailCustomer==null)||(jboxproduct==null)||(jboxmodel==null))
                JOptionPane.showMessageDialog(null,"please fill in all the fields or select a customer and select model!");
            //save the customer from the choice of the jComboBoxCustomer
            empty=true;
            jComboBoxCustomerActionPerformed(evt);
            customerOrder=salecon.getCustomerSale(emailCustomer);
            //for each model of the sale list 
            for(String d:addModelList)
            {
                //if the model is not deleted
                if(!deleteModelList.contains(d))
                {
                    //add the model in the final sale list
                    ProductString productString=new ProductString();
                    productString.setProin(d);                   
                    StringModelList.add(productString);
                }
            }     
            //the sale 
            Sale saleCreated=new Sale(totalPrice,ipallilos,customerOrder,totalItems,StringModelList);
            //save the sale in the table of the productstring on the database for each product of the sale 
            for(ProductString a:StringModelList)
                {
                    a.setSaleProin(saleCreated);
                } 
            //if the sale hasn t been saved
            if(!salecon.saveSale(saleCreated))
                JOptionPane.showMessageDialog(null,"The sale hasn t been saved.Please try again!");
            else
            {
                JOptionPane.showMessageDialog(null,"The sale has been saved in the database!");
                for(ProductString a:StringModelList)
                {
                    if(!salecon.saveString(a))
                       JOptionPane.showMessageDialog(null,"There is problem in the database!");
                }
            }
        }
        //if the user has registered a new customer
        else
        {
            //if the user hasn t fill in all the fields 
            if(salecon.nullMessageSale(name, surname, email, address, jboxproduct, jboxmodel))
                JOptionPane.showMessageDialog(null,"please fill in all the fields or select a customer and select model!");
            //save the customer
            customerOrder=new Customer(name, surname, email, address);
            //if the customer hasn t been saved
            if(!salecon.saveCustomer(customerOrder))
                JOptionPane.showMessageDialog(null,"The customer hasn t been saved.Please try again!");
            //for each model of the sale list
            for(String d:addModelList)
            {
                //if the model is not deleted
                if(!deleteModelList.contains(d))
                {
                    //add the model in the final sale list
                    ProductString productString=new ProductString();
                    productString.setProin(d);                   
                    StringModelList.add(productString);
                }
            }     
            //the sale
            Sale saleCreated=new Sale(totalPrice,ipallilos,customerOrder,totalItems,StringModelList);
            //save the sale in the table of the productstring on the database for each product of the sale
            for(ProductString a:StringModelList)
            {
                a.setSaleProin(saleCreated);
            } 
            //if the sale hasn t been saved
            if(!salecon.saveSale(saleCreated))
                JOptionPane.showMessageDialog(null,"The sale hasn t been saved.Please try again!");
            else
            {
                JOptionPane.showMessageDialog(null,"The sale has been saved in the database!");
                for(ProductString a:StringModelList)
                {
                    if(!salecon.saveString(a))
                       JOptionPane.showMessageDialog(null,"There is problem in the database!");
                }
            }                
        }
        //update the tables of the models of the sale in the database 
        //for each product of the sale
        for(ProductString a:StringModelList)
        {
            //the string of the model
            String proion=a.getProin();
            //array with the category,the model and the brand of the product 
            String[]proionta=proion.split(":");
            //update the corresponded table in the database
            if(proionta[0].equalsIgnoreCase("Camera"))
            {
                //proionta[2]=the model 
                salecon.updateCameraCon(proionta[2], "1");
                //JOptionPane.showMessageDialog(this, "the database has been updated");
            }
            else if(proionta[0].equalsIgnoreCase("Television"))
            {
                //proionta[2]=the model
                salecon.updateTelevisionCon(proionta[2], "1");
                // JOptionPane.showMessageDialog(this, "the database has been updated");
            }
            else if(proionta[0].equalsIgnoreCase("Mobile"))
            {
                //proionta[2]=the model
                salecon.updateMobileCon(proionta[2], "1");
                // JOptionPane.showMessageDialog(this, "the database has been updated");
            }
            else if(proionta[0].equalsIgnoreCase("Laptop"))
            {
                //proionta[2]=the model
                salecon.updateLaptopCon(proionta[2], "1");
                //JOptionPane.showMessageDialog(this, "the database has been updated");
            }
            //if there is no such model
            else
                JOptionPane.showMessageDialog(this, "the model has not been found or there are not so many item(s) of it.Please try again!");

        }
        //reset all the fields
        jButtonResetActionPerformed(evt);
    }//GEN-LAST:event_jButtonSaveActionPerformed
    //the choice of the category
    private void jComboBoxProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProductActionPerformed
        //the choice of the user 
        String chooseItem=jComboBoxProduct.getSelectedItem().toString();
        //if there is no choice
        if(chooseItem=="CATEGORY...")
        {
            JOptionPane.showMessageDialog(null,"Please choose a category");
            chooseItem=null;
        }
        else
        {
            //the table of the database for the selected category
            jboxproduct= salecon.getTheTableSale(chooseItem);
            //the models of theis category
            List<String> models = salecon.getListaSaleCon(jboxproduct);
            //if there are no models
            if(models.isEmpty())
                JOptionPane.showMessageDialog(null,"No list of models have found!Please try again! ");
            //the first element of the list
            models.add(0, "MODELS...");
            //delete the list fromthe previous choice       
            if(jComboBoxModel.getItemCount()>0)
                jComboBoxModel.removeAllItems();
            //the list for the jComboBoxModel
            for(String a:models)
            {
                jComboBoxModel.addItem(a);
            }
        }
    }//GEN-LAST:event_jComboBoxProductActionPerformed
    //the choice of the model
    private void jComboBoxModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModelActionPerformed
        //if there are models on the jComboBox
        if(jComboBoxModel.getItemCount()>0)
        {
            //the choice of the user  
            jboxmodelChoice=jComboBoxModel.getSelectedItem().toString();
            //if there is no choice
            if(jboxmodelChoice=="MODELS...")
            {
                JOptionPane.showMessageDialog(null,"Please choose a model");
                jboxmodelChoice=null;
            }
            else
            {
            //separate the string in the model and the brand
            String[] s=jboxmodelChoice.split(":");
            marka=s[0];
            jboxmodel=s[1];
            //search the model in the database
            product=salecon.getChoosenModelSaleCon(jboxmodel,jboxproduct);
            //the price of the model for the jTable
            price=String.valueOf(product.getPrice());
            }
        }
        
    }//GEN-LAST:event_jComboBoxModelActionPerformed
    //delete a product from the sale
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        //the number of the selected row
        int row=jTableSale.getSelectedRow();       
        //the prce of the selected product
        double priceForDelete=Double.parseDouble((String)jTableSale.getValueAt(row,3));
        //substraction from the total price and the total items
        totalItems=totalItems-1;
        totalPrice=totalPrice-priceForDelete;
        //update the values on the screen
        jLabelPrice.setText(String.valueOf(totalPrice));
        jLabelitems.setText(String.valueOf(totalItems));
        //the Strings of the attributes of the selected product
        String katigoria=String.valueOf(jTableSale.getValueAt(row, 0));
        String marka=String.valueOf(jTableSale.getValueAt(row, 1));
        String montelo=String.valueOf(jTableSale.getValueAt(row, 2));
        //add the deleted product on the list of the deleted products
        String deleteProion=katigoria+":"+marka+":"+montelo;
        deleteModelList.add(deleteProion);
        //delete the row from the list
        lista.removeRow(row);
    }//GEN-LAST:event_jButtonDeleteActionPerformed
    //reset all the fields
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        //reset the fields of the customer registration
        jTextNameCus.setText(null);
        jTextSurnameCus.setText(null);
        jTextEmail.setText(null);
        jTextAddress.setText(null);
        //reset the total values
        totalItems=0;
        totalPrice=0;
        //initialize the variables for the jComboBoxCustomer
        emailCustomer=null;
        jboxCustomerChoice=null;
        empty=false;
        //update the total values on the screen
        jLabelPrice.setText(String.valueOf(totalPrice));
        jLabelitems.setText(String.valueOf(totalItems));
        //remove the products from the sle list
        jTableSale.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER","BRAND","MODEL","PRICE"}) );
        //delete the list from the previous choice
        if(jComboBoxModel.getItemCount()>0)
            jComboBoxModel.removeAllItems();
        //initialize the variables of the jComboBox
        jboxproduct=null;
        jboxmodel=null;
    }//GEN-LAST:event_jButtonResetActionPerformed
    //choice of the customer from the combo box
    private void jComboBoxCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCustomerActionPerformed
        if(empty)
        {
            //the choice of the customer
            jboxCustomerChoice=jComboBoxCustomer.getSelectedItem().toString();
            //if there is no selected customer
            if(jboxCustomerChoice=="CUSTOMERS...")
            {
                JOptionPane.showMessageDialog(null,"Please choose a customer");
                jboxCustomerChoice=null;
            }
            else
            {
            //take only the email of the customer(unique id)
            String[] s=jboxCustomerChoice.split(" ");
            emailCustomer=s[2];
            }
        }
    }//GEN-LAST:event_jComboBoxCustomerActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleCreateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleCreateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleCreateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleCreateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleCreateView().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxCustomer;
    private javax.swing.JComboBox<String> jComboBoxModel;
    private javax.swing.JComboBox<String> jComboBoxProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelitems;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableSale;
    private javax.swing.JTextField jTextAddress;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextNameCus;
    private javax.swing.JTextField jTextSurnameCus;
    // End of variables declaration//GEN-END:variables
}
